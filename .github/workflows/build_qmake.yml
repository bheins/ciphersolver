name: QMake Build Matrix

on: [push]

env:
  QT_VERSION: 5.15.1
  QT_CREATOR_VERSION: 4.13.2
  PLUGIN_PRO: cipher.pro
  PLUGIN_NAME: Cipher

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows-latest]
        version: ['5.15.1']

    steps:
    - uses: actions/checkout@v1

    - name: Install Qt with options
      uses: ./
      with:
        modules: 'widgets'
        version: ${{ matrix.version }}
    - name: Configure
      shell: qmake {0}
      run: |
        mingw32-make

    - name: Upload a Build Artifact
    - uses: actions/upload-artifact@v2
      id: upload_artifact
      with:
        path: ./${{ env.PLUGIN_NAME }}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
        name: ${{ env.PLUGIN_NAME}}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}

  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Create a Release
      uses: actions/create-release@v1

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload a Build Artifact
      run: |
        echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url
    - uses: actions/upload-artifact@v2
      with:
        path: ./upload_url
        name: upload_url

  publish:
    if: contains(github.ref, 'tags/v')

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Windows Latest x64", artifact: "Windows-x64.zip",
            os: win32
          }
        - {
            name: "Windows Latest x86", artifact: "Windows-x86.zip",
            os: win32
          }

    needs: release

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.PLUGIN_NAME }}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
        path: ./

    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: upload_url
        path: ./
    - id: set_upload_url
      run: |
        upload_url=`cat ./upload_url`
        echo ::set-output name=upload_url::$upload_url
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: ./${{ env.PLUGIN_NAME }}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
        asset_name: ${{ env.PLUGIN_NAME }}-${{ env.QT_CREATOR_VERSION }}-${{ matrix.config.artifact }}
        asset_content_type: application/zip